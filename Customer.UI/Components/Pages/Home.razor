@page "/"
@using System.Diagnostics
@rendermode InteractiveServer
@inject BookingService bookingService
<PageTitle>Eskilstuna Biltvätt</PageTitle>

 
<div class="min-vh-100" style="background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);">
    <div class="container py-3 py-md-5">

        
        <div class="text-center text-white mb-4 mb-md-5 animate-fade-in">
            <h1 class="display-4 fw-bold mb-3" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                Eskilstuna Biltvätt
            </h1>
            <p class="lead opacity-90">
                Professionell biltvätt • Boka online • Snabb service
            </p>
        </div>

        <!--SERVICE SELECTION SECTION-->
        <div class="card border-0 shadow-lg mb-4 animate-slide-up" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px);">
            <div class="card-header border-0 bg-transparent pt-4 pb-0">
                <h3 class="h5 fw-bold text-dark d-flex align-items-center">
                    <span class="badge bg-primary rounded-circle me-3" style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">1</span>
                    Välj tjänst
                </h3>
            </div>

            <div class="card-body px-3 px-md-4">
                @if (serviceTypes == null)
                {
                    <!-- Loading State -->
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                            <span class="visually-hidden">Laddar...</span>
                        </div>
                    </div>
                }
                else if (serviceTypes.Any())
                {
                    <!-- Service Cards Grid -->
                    <div class="row g-3">
                        @foreach (var service in serviceTypes)
                        {
                            <div class="col-6 col-lg-3">
                                <div class="service-card h-100 p-3 rounded-3 text-center cursor-pointer @(selectedservice?.Id == service.Id ? "selected" : "")"
                                     @onclick="() => SelectService(service)"
                                     style="background: @(selectedservice?.Id == service.Id ? "linear-gradient(135deg, #667eea 0%, #764ba2 100%)" : "#f8f9fa");
                                                    color: @(selectedservice?.Id == service.Id ? "white" : "inherit");
                                                    border: 2px solid @(selectedservice?.Id == service.Id ? "#667eea" : "#e9ecef");
                                                    transition: all 0.3s ease;
                                                    cursor: pointer;">

                                   
                                    <div class="mb-2">
                                        <i class="bi bi-droplet-fill fs-1 @(selectedservice?.Id == service.Id ? "text-white" : "text-primary")"></i>
                                    </div>

                                  
                                    <h6 class="fw-bold mb-2 small">@service.Name</h6>

                                   
                                    <div class="h5 fw-bold mb-0">
                                        @service.Price kr
                                    </div>

                                    
                                    <p class="small mb-0 d-none d-md-block @(selectedservice?.Id == service.Id ? "text-white-50" : "text-muted")">
                                        @service.Description
                                    </p>

                                   
                                    @if (selectedservice?.Id == service.Id)
                                    {
                                        <div class="mt-2">
                                            <i class="bi bi-check-circle-fill"></i>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                   
                    <div class="alert alert-warning border-0" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        Inga tjänster tillgängliga just nu
                    </div>
                }
            </div>
        </div>

        <!-- TIME SLOT SELECTION SECTION -->
        <div class="card border-0 shadow-lg mb-4 animate-slide-up" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px); animation-delay: 0.1s;">
            <div class="card-header border-0 bg-transparent pt-4 pb-0">
                <h3 class="h5 fw-bold text-dark d-flex align-items-center">
                    <span class="badge bg-primary rounded-circle me-3" style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">2</span>
                    Välj tid
                </h3>
            </div>

            <div class="card-body px-3 px-md-4">
                @if (timeSlots == null)
                {
                   
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                            <span class="visually-hidden">Laddar...</span>
                        </div>
                    </div>
                }
                else if (timeSlots.Any())
                {
                    <!-- Group time slots by date -->
                    @foreach (var dateGroup in timeSlots.Where(ts => ts != null && ts.IsAvailable).GroupBy(ts => ts.AppointmentDate.Date))
                    {
                        <div class="mb-4">
                             
                            <div class="d-flex align-items-center mb-3">
                                <div class="bg-primary bg-opacity-10 rounded-3 p-2 me-3">
                                    <i class="bi bi-calendar-event text-primary"></i>
                                </div>
                                <h6 class="mb-0 fw-bold">
                                    @dateGroup.Key.ToString("dddd, d MMMM")
                                </h6>
                            </div>

                           
                            <div class="row g-2">
                                @foreach (var slot in dateGroup.Where(ts => ts != null).OrderBy(ts => ts.StartTime))
                                {
                                    <div class="col-4 col-md-2">
                                        <button class="btn w-100 @(selectedtimeSlot?.Id == slot.Id ? "btn-primary" : "btn-outline-secondary")"
                                                @onclick="@(() => SelectTimeSlot(slot))"
                                                style="transition: all 0.2s ease;">
                                            @slot.StartTime.ToString(@"hh\:mm")
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                  
                    <div class="alert alert-warning border-0" role="alert">
                        <i class="bi bi-calendar-x me-2"></i>
                        Inga lediga tider just nu
                    </div>
                }
            </div>
        </div>

        <!-- BOOKING FORM SECTION  -->
        @if (selectedservice != null && selectedtimeSlot != null)
        {
            <div class="card border-0 shadow-lg mb-4 animate-slide-up" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px); animation-delay: 0.2s;">
                <div class="card-header border-0 bg-transparent pt-4 pb-0">
                    <h3 class="h5 fw-bold text-dark d-flex align-items-center">
                        <span class="badge bg-success rounded-circle me-3" style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">3</span>
                        Slutför bokning
                    </h3>
                </div>

                <div class="card-body px-3 px-md-4">
                    <!-- Selected Summary -->
                    <div class="bg-light rounded-3 p-3 mb-4">
                        <div class="row g-3">
                            <div class="col-12 col-md-6">
                                <small class="text-muted d-block mb-1">Vald tjänst</small>
                                <strong>@selectedservice.Name</strong>
                                <span class="badge bg-primary ms-2">@selectedservice.Price kr</span>
                            </div>
                            <div class="col-12 col-md-6">
                                <small class="text-muted d-block mb-1">Vald tid</small>
                                <strong>@selectedtimeSlot.AppointmentDate.ToString("dddd, d MMMM")</strong>
                                <span class="badge bg-secondary ms-2">@selectedtimeSlot.StartTime.ToString(@"hh\:mm")</span>
                            </div>
                        </div>
                    </div>

                    <!-- Contact Form -->
                    <form>
                        <div class="row g-3">
                            <!-- License Plate Input -->
                            <div class="col-12 col-md-6">
                                <label for="licensePlate" class="form-label small fw-bold text-muted">
                                    REGISTRERINGSNUMMER
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bi bi-car-front text-primary"></i>
                                    </span>
                                    <input type="text"
                                           class="form-control border-start-0"
                                           id="licensePlate"
                                           @bind="licensePlate"
                                           placeholder="ABC 123"
                                           required
                                           style="text-transform: uppercase;">
                                </div>
                            </div>

                            <!-- Email Input -->
                            <div class="col-12 col-md-6">
                                <label for="email" class="form-label small fw-bold text-muted">
                                    E-POSTADRESS
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bi bi-envelope text-primary"></i>
                                    </span>
                                    <input type="email"
                                           class="form-control border-start-0"
                                           id="email"
                                           @bind="email"
                                           placeholder="din@email.se"
                                           required>
                                </div>
                            </div>
                        </div>

                        <!-- Error Message -->
                        @if (!string.IsNullOrEmpty(errormessage))
                        {
                            <div class="alert alert-danger border-0 mt-3" role="alert">
                                <i class="bi bi-exclamation-circle me-2"></i>
                                @errormessage
                            </div>
                        }
 
                        <div class="d-flex gap-2 mt-4">
                            <button type="button"
                                    class="btn btn-success flex-fill"
                                    @onclick="@CreateBooking"
                                    disabled="@isCreatingBooking">
                                @if (isCreatingBooking)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <span>Bokar...</span>
                                }
                                else
                                {
                                    <i class="bi bi-check-circle me-2"></i>
                                    <span>Bekräfta bokning</span>
                                }
                            </button>
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    @onclick="@ClearSelection">
                                <i class="bi bi-x-circle"></i>
                                <span class="d-none d-sm-inline ms-2">Avbryt</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        }

        <!-- SUCCESS MODAL  -->
        @if (showSuccessModal)
        {
            <div class="modal-backdrop fade show"></div>
            <div class="modal fade show d-block" tabindex="-1">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content border-0 shadow">
                    
                        <div class="modal-header border-0 bg-success text-white">
                            <h5 class="modal-title">
                                <i class="bi bi-check-circle-fill me-2"></i>
                                Bokning bekräftad!
                            </h5>
                            <button type="button" class="btn-close btn-close-white" @onclick="CloseSuccessModal"></button>
                        </div>

                   
                        <div class="modal-body text-center py-4">
                            <div class="mb-3">
                                <i class="bi bi-check-circle-fill text-success" style="font-size: 4rem;"></i>
                            </div>
                            <h5 class="mb-3">Tack för din bokning!</h5>

                            @if (lastBookedService != null && lastBookedTimeSlot != null)
                            {
                                <div class="bg-light rounded-3 p-3 text-start">
                                    <dl class="row mb-0">
                                        <dt class="col-5">Tjänst:</dt>
                                        <dd class="col-7">@lastBookedService.Name</dd>

                                        <dt class="col-5">Datum:</dt>
                                        <dd class="col-7">@lastBookedTimeSlot.AppointmentDate.ToString("d MMMM yyyy")</dd>

                                        <dt class="col-5">Tid:</dt>
                                        <dd class="col-7">@lastBookedTimeSlot.StartTime.ToString(@"hh\:mm")</dd>

                                        <dt class="col-5">Pris:</dt>
                                        <dd class="col-7 text-success fw-bold">@lastBookedService.Price kr</dd>
                                    </dl>
                                </div>
                            }
                        </div>

                      
                        <div class="modal-footer border-0">
                            <button type="button" class="btn btn-success" @onclick="CloseSuccessModal">
                                Stäng
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@code {
    private List<TimeSlotDTO>? timeSlots;
    private List<ServiceTypeDTO>? serviceTypes;
    private string licensePlate = string.Empty;
    private string email = string.Empty;
    private TimeSlotDTO? selectedtimeSlot;
    private ServiceTypeDTO? selectedservice;
    private string errormessage = string.Empty;

    //for modal
    private bool showSuccessModal = false;
    private bool isCreatingBooking = false;
    private ServiceTypeDTO? lastBookedService;
    private TimeSlotDTO? lastBookedTimeSlot;

    protected override async Task OnInitializedAsync()
    {
        await Task.WhenAll(LoadTimeSlots(), LoadServices());
    }


    private async Task CreateBooking()
    {
        if (string.IsNullOrEmpty(licensePlate) || string.IsNullOrEmpty(email))
        {
            errormessage = "Vänligen fyll i alla obligatoriska fält.";
            return;
        }
        if (selectedservice == null || selectedtimeSlot == null)
        {
            errormessage = "vänligen välj både tvätt och tid";
            return;
        }

        // Clear errors
        errormessage = string.Empty;
        isCreatingBooking = true;
        StateHasChanged();

        try
        {

            var success = await bookingService.CreateBooking(licensePlate, email, selectedservice.Id, selectedtimeSlot.Id);
            if (success == true)
            {


                //for modal
                lastBookedService = selectedservice;
                lastBookedTimeSlot = selectedtimeSlot;

                showSuccessModal = true;

                ClearSelection();

                //refresh timeslots
                await LoadTimeSlots();

            }
            else
            {
                errormessage = "skapandet av bokning misslyckades, försök igen";
            }
        }

        catch (Exception e)
        {
            errormessage = $"Ett fel uppstod {e.Message}";

        }
    }

    private async Task LoadTimeSlots()
    {

        timeSlots = await bookingService.GetTimeslots();


    }


    private async Task LoadServices()
    {
        serviceTypes = await bookingService.GetServiceTypes();
    }

    private void SelectService(ServiceTypeDTO serviceType)
    {
        selectedservice = serviceType;
        StateHasChanged();
    }

    private void SelectTimeSlot(TimeSlotDTO timeSlot)
    {
        if (timeSlot != null)
        {
            selectedtimeSlot = timeSlot;
            StateHasChanged();
        }

    }


    private void ClearSelection()
    {
        selectedtimeSlot = null;
        selectedservice = null;
        licensePlate = string.Empty;
        email = string.Empty;
        errormessage = string.Empty;
    }

    private void CloseSuccessModal()
    {
        showSuccessModal = false;
        StateHasChanged();
    }

}
